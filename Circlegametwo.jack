class Circlegametwo 
{
    field Circle ball; 
    field Circlewall rectangle1, rectangle2, rectangle3, rectangle4, rectangle5, rectangle6, rectangle7, rectangle8, rectangle9, rectangle10, rectangle11, rectangle12, rectangle13, rectangle14, rectangle15, rectangle16, rectangle17, rectangle18, rectangle19, rectangle20,rectangle21;
    field int direction;
    field int key;
    field boolean exit;
    //field displayleveltwo dobj;
    
    field int rect1x11, rect1y11, rect1x22, rect1y22;
    field int rect2x11, rect2y11, rect2x22, rect2y22;
    field int rect3x11, rect3y11, rect3x22, rect3y22;
    field int rect4x11, rect4y11, rect4x22, rect4y22;
    field int rect5x11, rect5y11, rect5x22, rect5y22;
    field int rect6x11, rect6y11, rect6x22, rect6y22;
    field int rect7x11, rect7y11, rect7x22, rect7y22;
    field int rect8x11, rect8y11, rect8x22, rect8y22;
    field int rect9x11, rect9y11, rect9x22, rect9y22;
    field int rect10x11, rect10y11, rect10x22, rect10y22;
    field int rect11x11, rect11y11, rect11x22, rect11y22;
    field int rect12x11, rect12y11, rect12x22, rect12y22;
    field int rect13x11, rect13y11, rect13x22, rect13y22;
    field int rect14x11, rect14y11, rect14x22, rect14y22;
    field int rect15x11, rect15y11, rect15x22, rect15y22;
    field int rect16x11, rect16y11, rect16x22, rect16y22;
    field int rect17x11, rect17y11, rect17x22, rect17y22;
    field int rect18x11, rect18y11, rect18x22, rect18y22;
    field int rect19x11, rect19y11, rect19x22, rect19y22;
    field int rect20x11, rect20y11, rect20x22, rect20y22;
    field int rect21x11, rect21y11, rect21x22, rect21y22;
    
    //let dobj=displaylevelthree.new();
    
    constructor Circlegametwo new() 
    {
	    //do dobj.displayText();
        //let ball = Circle.new(250,137,5);
        
        let rect1x11 = 0;
        let rect1y11 = 0;
        let rect1x22 = 510;
        let rect1y22 = 5;
        
        let rect2x11 = 505;
        let rect2y11 = 5;
        let rect2x22 = 510;
        let rect2y22 = 254;
        
        let rect3x11 = 0;
        let rect3y11 = 25;
        let rect3x22 = 5;
        let rect3y22 = 254;
        
        let rect4x11 = 5;
        let rect4y11 = 249;
        let rect4x22 = 505;
        let rect4y22 = 254;
        
        let rect5x11 = 5;
        let rect5y11 = 25;
        let rect5x22 = 485;
        let rect5y22 = 30;
        
        let rect6x11 = 480;
        let rect6y11 = 30;
        let rect6x22 = 485;
        let rect6y22 = 229;
        
        let rect7x11 = 25;
        let rect7y11 = 224;
        let rect7x22 = 480;
        let rect7y22 = 229;
        
        let rect8x11 = 25;
        let rect8y11 = 50;
        let rect8x22 = 30;
        let rect8y22 = 224;
        
        let rect9x11 = 25;
        let rect9y11 = 50;
        let rect9x22 = 460;
        let rect9y22 = 55;
        
        let rect10x11 = 455;
        let rect10y11 = 55;
        let rect10x22 = 460;
        let rect10y22 = 204;
        
        let rect11x11 = 50;
        let rect11y11 = 199;
        let rect11x22 = 455;
        let rect11y22 = 204;
        
        let rect12x11 = 50;
        let rect12y11 = 75;
        let rect12x22 = 55;
        let rect12y22 = 199;
        
        let rect13x11 = 55;
        let rect13y11 = 75;
        let rect13x22 = 430;
        let rect13y22 = 80;
        
        let rect14x11 = 430;
        let rect14y11 = 75;
        let rect14x22 = 435;
        let rect14y22 = 179;
        
        let rect15x11 = 75;
        let rect15y11 = 174;
        let rect15x22 = 435;
        let rect15y22 = 179;
        
        let rect16x11 = 75;
        let rect16y11 = 100;
        let rect16x22 = 80;
        let rect16y22 = 179;
        
        let rect17x11 = 80;
        let rect17y11 = 100;
        let rect17x22 = 410;
        let rect17y22 = 105;
        
        let rect18x11 = 405;
        let rect18y11 = 105;
        let rect18x22 = 410;
        let rect18y22 = 154;
        
        let rect19x11 = 100;
        let rect19y11 = 149;
        let rect19x22 = 405;
        let rect19y22 = 154;
        
        let rect20x11 = 100;
        let rect20y11 = 125;
        let rect20x22 = 105;
        let rect20y22 = 149;
        
        let rect21x11 = 105;
        let rect21y11 = 125;
        let rect21x22 = 385;
        let rect21y22 = 130;
        return this;
    }

    method void restart()
    {
        do ball.dispose();
        let ball = Circle.new(12,12,5);
        //let ball = Circle.new(250,137,5);
        //115,137
        let direction = 0;
        do run();
        return;
    }

    method void startlevel2slide()
    {
        do Screen.clearScreen();
        do Output.moveCursor(0,0);
        do Output.printString("****************************************************************");
        do Output.moveCursor(1,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(2,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(3,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(4,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(5,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(6,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(7,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(8,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(9,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(10,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(11,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(12,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(13,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(14,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(15,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(16,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(17,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(18,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(19,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(20,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(21,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(22,0);
        do Output.printString("****************************************************************");
        do Output.moveCursor(21, 22);
        do Output.printString("Press y to start !");
        do Output.moveCursor(11, 27);
        do Output.printString("LEVEL 2");
        return;
    }

    method void errorprint()
    {
        do Output.moveCursor(0,0);
        do Output.printString("****************************************************************");
        do Output.moveCursor(1,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(2,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(3,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(4,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(5,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(6,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(7,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(8,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(9,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(10,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(10, 25);
        do Output.printString("Hit in wall!");
        do Output.moveCursor(11,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(12,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(13,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(14,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(15,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(16,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(17,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(18,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(19,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(20,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(21,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(22,0);
        do Output.printString("****************************************************************");
	    do Output.moveCursor(21, 17);
        do Output.printString("Press r to restart this level ");
        //do Sys.wait(5000);
        return;
    }

    method void successprint()
    {
        do Output.moveCursor(0,0);
        do Output.printString("****************************************************************");
        do Output.moveCursor(1,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(2,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(3,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(4,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(5,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(6,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(7,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(8,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(9,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(10,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(11,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(11, 17);
        do Output.printString("Sucessfully passed the level 2!");
        do Output.moveCursor(12,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(13,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(14,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(15,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(16,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(17,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(18,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(19,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(20,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(21,0);
        do Output.printString("*                                                              *");
        do Output.moveCursor(22,0);
        do Output.printString("****************************************************************");
        do Output.moveCursor(21, 14);
        do Output.printString("Press space bar to move the next level !");
        return;
    }

    method void dispose() 
    {
    do ball.dispose();
    do rectangle1.dispose();
    do rectangle2.dispose();
    do rectangle3.dispose();
    do rectangle4.dispose();
    do rectangle5.dispose();
    do rectangle6.dispose();
    do rectangle7.dispose();
    do rectangle8.dispose();
    do rectangle9.dispose();
    do rectangle10.dispose();
    do rectangle11.dispose();
    do rectangle12.dispose();
    do rectangle13.dispose();
    do rectangle14.dispose();
    do rectangle15.dispose();
    do rectangle16.dispose();
    do rectangle17.dispose();
    do rectangle18.dispose();
    do rectangle19.dispose();
    do rectangle20.dispose();
    do rectangle21.dispose();
    do Memory.deAlloc(this);
    return;
    }

    
   method void moveball() 
    {
        if (direction = 1) 
        { 
            do ball.moveUp(); 
        } 
        if (direction = 2) 
        { 
            do ball.moveDown(); 
        } 
        if (direction = 3) 
        { 
            do ball.moveLeft(); 
        } 
        if (direction = 4) 
        { 
            do ball.moveRight(); 
        }
        do Sys.wait(5);
        return;
    }
        

    method void isendball()
    {
        var int tx1,ty1;
        
        let tx1 = ball.getx();
        let ty1 = ball.gety();
        if((tx1 = 115) & (ty1 > 135) & (ty1 < 145))
        {
        do successprint();
        let exit=true;
        return;
        }
        return;
    }

     method void run() 
    {
	let ball = Circle.new(12,12,5);
        let exit = false; 
        do borderdraw();
        while (~exit) 
        {
            let key=0;
            let key = Keyboard.keyPressed();
            while(~(key = 0))
            {
            if (key = 81)  
            { 
                let exit = true; 
            }
            if (key = 131) 
            { 
                let direction = 1; 
                do moveball();
            }
            if (key = 133) 
            { 
                let direction = 2;
                do moveball();
            }   
            if (key = 130) 
            { 
                let direction = 3; 
                do moveball();
            }  
            if (key = 132) 
            { 
                let direction = 4; 
                do moveball();
            }
            do checkCollisionball();
            do isendball();
            let key = 0;
            }
        }
        return;
    }
    
    
    method void borderdraw()
    {
        let rectangle1 = Circlewall.new(rect1x11, rect1y11, rect1x22, rect1y22);
        let rectangle2 = Circlewall.new(rect2x11, rect2y11, rect2x22, rect2y22);
        let rectangle3 = Circlewall.new(rect3x11, rect3y11, rect3x22, rect3y22);
        let rectangle4 = Circlewall.new(rect4x11, rect4y11, rect4x22, rect4y22);
        let rectangle5 = Circlewall.new(rect5x11, rect5y11, rect5x22, rect5y22);
        let rectangle6 = Circlewall.new(rect6x11, rect6y11, rect6x22, rect6y22);
        let rectangle7 = Circlewall.new(rect7x11, rect7y11, rect7x22, rect7y22);
        let rectangle8 = Circlewall.new(rect8x11, rect8y11, rect8x22, rect8y22);
        let rectangle9 = Circlewall.new(rect9x11, rect9y11, rect9x22, rect9y22);
        let rectangle10 = Circlewall.new(rect10x11, rect10y11, rect10x22, rect10y22);
        let rectangle11 = Circlewall.new(rect11x11, rect11y11, rect11x22, rect11y22);
        let rectangle12 = Circlewall.new(rect12x11, rect12y11, rect12x22, rect12y22);
        let rectangle13 = Circlewall.new(rect13x11, rect13y11, rect13x22, rect13y22);
        let rectangle14 = Circlewall.new(rect14x11, rect14y11, rect14x22, rect14y22);
        let rectangle15 = Circlewall.new(rect15x11, rect15y11, rect15x22, rect15y22);
        let rectangle16 = Circlewall.new(rect16x11, rect16y11, rect16x22, rect16y22);
        let rectangle17 = Circlewall.new(rect17x11, rect17y11, rect17x22, rect17y22);
        let rectangle18 = Circlewall.new(rect18x11, rect18y11, rect18x22, rect18y22);
        let rectangle19 = Circlewall.new(rect19x11, rect19y11, rect19x22, rect19y22);
        let rectangle20 = Circlewall.new(rect20x11, rect20y11, rect20x22, rect20y22);
        let rectangle21 = Circlewall.new(rect21x11, rect21y11, rect21x22, rect21y22);
        //do Sys.wait(5000);
        return;
    }
    
    method void checkCollisionball() 
    {
        var int tx, ty, tr;
        var boolean check;
        let tx = ball.getx();
        let ty = ball.gety();
        let tr = ball.getr();
        let check = false;
        
        // Rectangle 1
        
        if(((tx + tr > rect1x11) | (tx + tr = rect1x11)) & ((tx - tr < rect1x22) | (tx - tr = rect1x22))
            & ((ty + tr > rect1y11) | (ty + tr = rect1y11)) & ((ty - tr < rect1y22) | (ty - tr = rect1y22))) 
        {
            let check = true;
        }
        
        // Rectangle 2
        
        if(((tx + tr > rect2x11) | (tx + tr = rect2x11)) & ((tx - tr < rect2x22) | (tx - tr = rect2x22))
            & ((ty + tr > rect2y11) | (ty + tr = rect2y11)) & ((ty - tr < rect2y22) | (ty - tr = rect2y22))) 
        {
            let check = true;
        }
        
        // Rectangle 4
        
        if(((tx + tr > rect4x11) | (tx + tr = rect4x11)) & ((tx - tr < rect4x22) | (tx - tr = rect4x22))
            & ((ty + tr > rect4y11) | (ty + tr = rect4y11)) & ((ty - tr < rect4y22) | (ty - tr = rect4y22))) 
        {
            let check = true;
        }
        
        // Rectangle 5
        
        if(((tx + tr > rect5x11) | (tx + tr = rect5x11)) & ((tx - tr < rect5x22) | (tx - tr = rect5x22))
            & ((ty + tr > rect5y11) | (ty + tr = rect5y11)) & ((ty - tr < rect5y22) | (ty - tr = rect5y22))) 
        {
            let check = true;
        }
        
        // Rectangle 6
        
        if(((tx + tr > rect6x11) | (tx + tr = rect6x11)) & ((tx - tr < rect6x22) | (tx - tr = rect6x22))
            & ((ty + tr > rect6y11) | (ty + tr = rect6y11)) & ((ty - tr < rect6y22) | (ty - tr = rect6y22))) 
        {
            let check = true;
        }
        
        // Rectangle 7
        
        if(((tx + tr > rect7x11) | (tx + tr = rect7x11)) & ((tx - tr < rect7x22) | (tx - tr = rect7x22))
            & ((ty + tr > rect7y11) | (ty + tr = rect7y11)) & ((ty - tr < rect7y22) | (ty - tr = rect7y22))) 
        {
            let check = true;
        }
        
        // Rectangle 8
        
        if(((tx + tr > rect8x11) | (tx + tr = rect8x11)) & ((tx - tr < rect8x22) | (tx - tr = rect8x22))
            & ((ty + tr > rect8y11) | (ty + tr = rect8y11)) & ((ty - tr < rect8y22) | (ty - tr = rect8y22))) 
        {
            let check = true;
        }
        
        // Rectangle 9
        
        if(((tx + tr > rect9x11) | (tx + tr = rect9x11)) & ((tx - tr < rect9x22) | (tx - tr = rect9x22))
            & ((ty + tr > rect9y11) | (ty + tr = rect9y11)) & ((ty - tr < rect9y22) | (ty - tr = rect9y22))) 
        {
            let check = true;
        }
        
        // Rectangle 10
        
        if(((tx + tr > rect10x11) | (tx + tr = rect10x11)) & ((tx - tr < rect10x22) | (tx - tr = rect10x22))
            & ((ty + tr > rect10y11) | (ty + tr = rect10y11)) & ((ty - tr < rect10y22) | (ty - tr = rect10y22))) 
        {
            let check = true;
        }
        
        // Rectangle 11
        
        if(((tx + tr > rect11x11) | (tx + tr = rect11x11)) & ((tx - tr < rect11x22) | (tx - tr = rect11x22))
            & ((ty + tr > rect11y11) | (ty + tr = rect11y11)) & ((ty - tr < rect11y22) | (ty - tr = rect11y22))) 
        {
            let check = true;
        }
        
        // Rectangle 12
        
        if(((tx + tr > rect12x11) | (tx + tr = rect12x11)) & ((tx - tr < rect12x22) | (tx - tr = rect12x22))
            & ((ty + tr > rect12y11) | (ty + tr = rect12y11)) & ((ty - tr < rect12y22) | (ty - tr = rect12y22))) 
        {
            let check = true;
        }
        
        // Rectangle 13
        
        if(((tx + tr > rect13x11) | (tx + tr = rect13x11)) & ((tx - tr < rect13x22) | (tx - tr = rect13x22))
            & ((ty + tr > rect13y11) | (ty + tr = rect13y11)) & ((ty - tr < rect13y22) | (ty - tr = rect13y22))) 
        {
            let check = true;
        }
        
        // Rectangle 14
        
        if(((tx + tr > rect14x11) | (tx + tr = rect14x11)) & ((tx - tr < rect14x22) | (tx - tr = rect14x22))
            & ((ty + tr > rect14y11) | (ty + tr = rect14y11)) & ((ty - tr < rect14y22) | (ty - tr = rect14y22))) 
        {
            let check = true;
        }
        
        // Rectangle 15
        
        if(((tx + tr > rect15x11) | (tx + tr = rect15x11)) & ((tx - tr < rect15x22) | (tx - tr = rect15x22))
            & ((ty + tr > rect15y11) | (ty + tr = rect15y11)) & ((ty - tr < rect15y22) | (ty - tr = rect15y22))) 
        {
            let check = true;
        }
        
        // Rectangle 16
        
        if(((tx + tr > rect16x11) | (tx + tr = rect16x11)) & ((tx - tr < rect16x22) | (tx - tr = rect16x22))
            & ((ty + tr > rect16y11) | (ty + tr = rect16y11)) & ((ty - tr < rect16y22) | (ty - tr = rect16y22))) 
        {
            let check = true;
        }
        
        // Rectangle 17
        
        if(((tx + tr > rect17x11) | (tx + tr = rect17x11)) & ((tx - tr < rect17x22) | (tx - tr = rect17x22))
            & ((ty + tr > rect17y11) | (ty + tr = rect17y11)) & ((ty - tr < rect17y22) | (ty - tr = rect17y22))) 
        {
            let check = true;
        }
        
        // Rectangle 18
        
        if(((tx + tr > rect18x11) | (tx + tr = rect18x11)) & ((tx - tr < rect18x22) | (tx - tr = rect18x22))
            & ((ty + tr > rect18y11) | (ty + tr = rect18y11)) & ((ty - tr < rect18y22) | (ty - tr = rect18y22))) 
        {
            let check = true;
        }
        
        // Rectangle 19
        
        if(((tx + tr > rect19x11) | (tx + tr = rect19x11)) & ((tx - tr < rect19x22) | (tx - tr = rect19x22))
            & ((ty + tr > rect19y11) | (ty + tr = rect19y11)) & ((ty - tr < rect19y22) | (ty - tr = rect19y22))) 
        {
            let check = true;
        }
        
        // Rectangle 20
        
        if(((tx + tr > rect20x11) | (tx + tr = rect20x11)) & ((tx - tr < rect20x22) | (tx - tr = rect20x22))
            & ((ty + tr > rect20y11) | (ty + tr = rect20y11)) & ((ty - tr < rect20y22) | (ty - tr = rect20y22))) 
        {
            let check = true;
        }
        
        // Rectangle 21
        if(((tx + tr > rect21x11) | (tx + tr = rect21x11)) & ((tx - tr < rect21x22) | (tx - tr = rect21x22))
            & ((ty + tr > rect21y11) | (ty + tr = rect21y11)) & ((ty - tr < rect21y22) | (ty - tr = rect21y22))) 
        {
            let check = true;
        }
        if(check)
        {
            do errorprint();
	        let exit = false;
	        while (~exit) 
                {
                    let key = Keyboard.keyPressed();
                    while(~(key = 0))
                        {
                            if (key = 82)  
                                {
                            		do Screen.clearScreen();
                                    do restart();
                                    let key = 0;
                                    let exit = true;
                                }            
	                        
                       }
                }
        }
        return;
    }
}

        
        
